---
- name: setup webserver vhost
  hosts: web
  become: true
  vars:
    app_user: "www-data"
    http_host: "example.com"
    http_conf: "example.com.conf"
    http_port: "80"
    disable_default: true
  tasks:
    - name: apache installed
      ansible.builtin.apt: 
        name: apache2
        update_cache: true
        state: latest

    - name: document root exist
      ansible.builtin.file:
        path: "/var/www/{{ http_host }}"
        state: directory 
        owner: "{{ app_user }}"
        mode: '0755'

    - name: custom index.html
      ansible.builtin.copy:
        dest: "/var/www/{{ http_host }}/index.html"
        content: |
          this is my custom web <hello world> 

    - name: set up apache vartual hosts
      ansible.builtin.template:
        src: "apache.conf.j2"
        dest: "/etc/apache2/sites-available/{{ http_conf }}"

    - name: enable new site 
      ansible.builtin.command: "/usr/sbin/a2ensite {{ http_conf }}"
      notify: reload Apache

    - name: disable default Apache site 
      ansible.builtin.command: "/usr/sbin/a2dissite 000-default.conf"
      when: disable_default
      notify: reload Apache

    - name: open firewall
      community.general.ufw:
        rule: allow
        port: "{{ http_port }}"
        proto: tcp 
        
    - name: Get public IP address
      ansible.builtin.set_fact:
        public_ip: "{{ ansible_default_ipv4.address }}"
      when: ansible_default_ipv4 and ansible_default_ipv4.address is defined

    - name: Update /etc/hosts file
      ansible.builtin.lineinfile:
        path: "/etc/hosts"
        regexp: "^.*\t{{ http_host }}$"
        line: "{{ public_ip }}\t{{ http_host }}"
        state: present
      when: http_host is defined and public_ip is defined
  handlers:
    - name: reload Apache
      ansible.builtin.service:
        name: apache2
        state: reloaded
